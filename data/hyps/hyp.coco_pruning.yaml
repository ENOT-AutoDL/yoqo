# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license
# Hyperparameters for low-augmentation COCO training from scratch
# python train.py --batch 64 --cfg yolov5n6.yaml --weights '' --data coco.yaml --img 640 --epochs 300 --linear
# See tutorials for hyperparameter evolution https://github.com/ultralytics/yolov5#tutorials

lr0: 0.0012278
lrf: 0.7922
momentum: 0.82344
weight_decay: 0.00018297
warmup_epochs: 3.275
warmup_momentum: 0.49071
warmup_bias_lr: 0.050513
box: 0.05
cls: 0.5
cls_pw: 1.0
obj: 1.0
obj_pw: 1.0
iou_t: 0.2
anchor_t: 2.2923
fl_gamma: 0.0
hsv_h: 0.215
hsv_s: 0.7
hsv_v: 0.4
degrees: 45.0
rotation_prob: 0.3
translate: 0.1
scale: 0.3
shear: 0.0
perspective: 0.0005
flipud: 0.0
fliplr: 0.5
mosaic: 1.0
mixup: 0.0
copy_paste: 0.0
anchors: 5.1285
pruning:
  pruning_mode: optimal
  calibration_steps: null
  calibration_epochs: 1
  equal:
    pruning_ratio: 0.31
  global_wrt_metric:
    maximal_acceptable_metric_drop: 0.02
    minimal_channels_to_prune: 10
    maximal_channels_to_prune: 150
    channel_step_to_search: 10
  optimal:
    latency_type: flops
    time:
      warmup: 10
      repeat: 50
      number: 50
      backend: ort_cpu  # choose from ['torch', 'ort_cpu']
    target_latency: null
    target_latency_fraction: 0.5
    n_search_steps: 200
    latency_penalty: 300